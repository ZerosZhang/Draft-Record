<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="18.11.0.1">
<procedure name="depth_color">
<interface>
<io>
<par name="InputImage" base_type="iconic" dimension="0"/>
<par name="InputRegion" base_type="iconic" dimension="0"/>
</io>
<oo>
<par name="OutputImage" base_type="iconic" dimension="0"/>
</oo>
<ic>
<par name="GrayCoefficient" base_type="ctrl" dimension="0"/>
</ic>
<oc>
<par name="Result" base_type="ctrl" dimension="0"/>
</oc>
</interface>
<body>
<l>try</l>
<l>    get_image_size (InputImage, Width, Height)</l>
<l>    ColorValue := ['red', 'orange', 'yellow', 'forest green', 'green', 'blue', 'navy']</l>
<l>    Number := |ColorValue|</l>
<c>    </c>
<l>    open_window (0, 0, Width + 500, Height, 0, 'buffer', '', WindowHandle)</l>
<l>    set_part (WindowHandle, 0, 0, Height, Width + 500)</l>
<l>    set_display_font (WindowHandle, 70, 'mono', 'true', 'false')</l>
<c>    </c>
<l>    StartColumn := Width</l>
<l>    StepWidth := 50</l>
<l>    StartRow := int(Height * 0.1)</l>
<l>    StepHeight := int(Height * 0.8) / Number</l>
<c>    </c>
<c>    * 提取有效区域</c>
<l>    get_region_points (InputRegion, Rows, Columns)</l>
<l>    get_grayval (InputImage, Rows, Columns, Grayval)</l>
<l>    tuple_sort_index (Grayval, Indices)</l>
<l>    tuple_inverse (Indices, Indices)</l>
<l>    tuple_median (Grayval, Median)</l>
<l>    tuple_min (Grayval, MinHeight)  </l>
<l>    tuple_max (Grayval, MaxHeight)</l>
<c>    </c>
<c>    * 每档大致多少像素</c>
<l>    tuple_round (|Grayval| * (1.0/Number), Step)</l>
<l>    Begin_Index := 0</l>
<l>    End_Index := 0</l>
<l>    Recode_Value := []</l>
<c>    * 循环，每次从所有像素里（从大到小排序后），取step个像素</c>
<l>    for Index := 0 to Number-1 by 1</l>
<l>        End_Index:= Begin_Index + Step</l>
<l>        if( End_Index &gt; |Indices| - 1)</l>
<l>            End_Index:= |Indices| - 1</l>
<l>        endif</l>
<c>        *选择Indices数组中Begin_Index至End_Index的元素,即Grayval的索引,也是Rows和Columns的索引</c>
<l>        tuple_select_range (Indices, Begin_Index, End_Index, SelectedIndex)</l>
<c>        * 获取该档灰度值对应的行列</c>
<l>        tuple_select (Rows, SelectedIndex, SelectedRow)</l>
<l>        tuple_select (Columns, SelectedIndex, SelectedCol)</l>
<c>        *按SelectedRow, SelectedCol坐标创建点区域</c>
<l>        gen_region_points (RegionSub, SelectedRow, SelectedCol)</l>
<c>        *提取 RegionSub 所在区域图像ImagePart的最大与最小灰度值</c>
<l>        min_max_gray (RegionSub, InputImage, 5, Min, Max, _)</l>
<c>        *数组Recode_Value添加值为Min的元素</c>
<l>        tuple_concat (Recode_Value, Max, Recode_Value)</l>
<l>        Begin_Index := End_Index + 1</l>
<c></c>
<l>        set_color (WindowHandle, ColorValue[Index])</l>
<l>        disp_obj (RegionSub, WindowHandle)</l>
<l>        gen_rectangle1 (ICORegion, StartRow, StartColumn, StartRow + StepHeight, StartColumn + StepWidth)</l>
<l>        disp_obj (ICORegion, WindowHandle)</l>
<l>        Max := Max - Median</l>
<l>        Display_Value := (Max * GrayCoefficient)$'.2f'</l>
<l>        disp_message (WindowHandle, Display_Value, 'window', StartRow - 35, StartColumn + StepWidth + 30, 'yellow', 'false')</l>
<l>        StartRow := StartRow + StepHeight</l>
<l>    endfor</l>
<c>    </c>
<l>    Min := Min - Median</l>
<l>    Display_Value := (Min * GrayCoefficient)$'.2f'</l>
<l>        disp_message (WindowHandle, Display_Value, 'window', StartRow - 35, StartColumn + StepWidth + 30, 'yellow', 'false')</l>
<l>    dump_window_image (OutputImage, WindowHandle)</l>
<l>    Result := 0</l>
<l>    close_window (WindowHandle)</l>
<l>catch (ex)</l>
<c>    *异常</c>
<l>    Result := ex</l>
<l>endtry</l>
</body>
<docu id="depth_color">
<parameters>
<parameter id="GrayCoefficient"/>
<parameter id="InputImage"/>
<parameter id="InputRegion"/>
<parameter id="OutputImage"/>
<parameter id="Result"/>
</parameters>
</docu>
</procedure>
</hdevelop>
