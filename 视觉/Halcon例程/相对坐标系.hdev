<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="18.11.0.1">
<procedure name="main">
<interface/>
<body>
<l>dev_set_line_width (3)</l>
<l>dev_set_draw ('margin')</l>
<c></c>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2,1]" as_ord="1">open_framegrabber ('GigEVision2', 0, 0, 0, 0, 0, 0, 'progressive', -1, 'default', -1, 'false', 'default', 'b0b3536c3537_Hikrobot_MVCA05010GM', 0, -1, AcqHandle)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,1]" as_ord="1">grab_image_start (AcqHandle, -1)</l>
<l>grab_image_async (Image1, AcqHandle, -1)</l>
<l>dev_resize_window_fit_image (Image1, 0, 0, -1, -1)</l>
<l>dev_get_window (WindowHandle)</l>
<l>get_image_size (Image1, Width, Height)</l>
<c></c>
<l>draw_line (WindowHandle, Row1, Column1, Row2, Column2)</l>
<l>line_position (Row1, Column1, Row2, Column2, RowCenter, ColCenter, Length, Phi)</l>
<c></c>
<l>num := 10    </l>
<l>diff_row := (Row2 - Row1)/(num+1)</l>
<l>diff_col := (Column2-Column1)/(num+1)</l>
<c></c>
<l>line_point_row := []</l>
<l>line_point_col := []</l>
<c></c>
<l>for Index := 1 to num by 1</l>
<l>    gen_rectangle2 (Rectangle1, Row1 + diff_row * Index, Column1 + diff_col * Index, Phi - rad(90), 100, 20)</l>
<l>    gen_measure_rectangle2 (Row1 + diff_row * Index, Column1 + diff_col * Index, Phi - rad(90), 100, 20, Width, Height, 'nearest_neighbor', MeasureHandle)</l>
<l>    measure_pos (Image1, MeasureHandle, 1, 30, 'all', 'all', RowEdge, ColumnEdge, Amplitude, Distance)</l>
<l>    line_point_row := [line_point_row, RowEdge]</l>
<l>    line_point_col := [line_point_col, ColumnEdge]</l>
<l>endfor</l>
<l>gen_contour_polygon_xld (Contour, line_point_row, line_point_col)</l>
<l>fit_line_contour_xld (Contour, 'tukey', -1, 0, 5, 2, RowBegin, ColBegin, RowEnd, ColEnd, Nr, Nc, Dist)</l>
<c></c>
<l>dev_set_color ('green')</l>
<l>disp_line (WindowHandle, RowBegin, ColBegin, RowEnd, ColEnd)</l>
<l>dev_set_color ('red')</l>
<c></c>
<l>draw_rectangle2 (WindowHandle, Row, Column, Phi1, Length1, Length2)</l>
<l>gen_rectangle2 (Rectangle, Row, Column, Phi1, Length1, Length2)</l>
<l>reduce_domain (Image1, Rectangle, ImageReduced)</l>
<l>create_shape_model (ImageReduced, 5, rad(0), rad(360), rad(0.1), 'none', 'use_polarity', 50, 20, ModelID)</l>
<l>get_shape_model_contours (ModelContours, ModelID, 1)</l>
<l>area_center (Rectangle, Area, Row_Ref, Column_Ref)</l>
<c></c>
<c></c>
<c></c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,2]" as_ord="1">while (true)</l>
<c>    </c>
<l>    grab_image (Image, AcqHandle)</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,4]" as_ord="1">    * Image Acquisition 01: Do something</c>
<l>    find_shape_model (Image, ModelID, rad(0), rad(360), 0.5, 1, 0.5, 'least_squares', 0, 0.9, Row3, Column3, Angle, Score)</l>
<l>    if (|Score| == 1)</l>
<l>        vector_angle_to_rigid (0, 0, 0, Row3, Column3, Angle, HomMat2D)</l>
<l>        affine_trans_contour_xld (ModelContours, ContoursAffineTrans, HomMat2D)</l>
<c>        </c>
<l>        vector_angle_to_rigid (Row_Ref, Column_Ref, 0, Row3, Column3, Angle, HomMat2D1)</l>
<l>        affine_trans_pixel (HomMat2D1, Row1, Column1, RowTrans1, ColTrans1)</l>
<l>        affine_trans_pixel (HomMat2D1, Row2, Column2, RowTrans2, ColTrans2)</l>
<l>*         gen_region_line (RegionLines, RowTrans1, ColTrans1, RowTrans2, ColTrans2)</l>
<c>        </c>
<l>        line_orientation (RowTrans1, ColTrans1, RowTrans2, ColTrans2, Phi2)</l>
<c>        </c>
<l>        diff_row := (RowTrans2 - RowTrans1)/(num+1)</l>
<l>        diff_col := (ColTrans2-ColTrans1)/(num+1)</l>
<c>        </c>
<l>        line_point_row := []</l>
<l>        line_point_col := []</l>
<c>        </c>
<l>        for Index := 1 to num by 1</l>
<l>*             gen_rectangle2 (Rectangle1, RowTrans1 + diff_row * Index, ColTrans1 + diff_col * Index, Phi2 - rad(90), 100, 20)</l>
<l>            gen_measure_rectangle2 (RowTrans1 + diff_row * Index, ColTrans1 + diff_col * Index, Phi2 - rad(90), 100, 20, Width, Height, 'nearest_neighbor', MeasureHandle)</l>
<l>            measure_pos (Image, MeasureHandle, 1, 30, 'all', 'all', RowEdge, ColumnEdge, Amplitude, Distance)</l>
<l>            line_point_row := [line_point_row, RowEdge]</l>
<l>            line_point_col := [line_point_col, ColumnEdge]</l>
<l>        endfor</l>
<l>        if (|line_point_col| ==0)</l>
<l>            continue</l>
<l>        endif</l>
<l>        gen_contour_polygon_xld (Contour, line_point_row, line_point_col)</l>
<l>        fit_line_contour_xld (Contour, 'tukey', -1, 0, 5, 2, RowBegin, ColBegin, RowEnd, ColEnd, Nr, Nc, Dist)</l>
<c>        </c>
<l>        dev_set_color ('green')</l>
<l>        disp_line (WindowHandle, RowBegin, ColBegin, RowEnd, ColEnd)</l>
<l>        dev_set_color ('red')</l>
<l>    endif</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[3,1]" as_ord="1">endwhile</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[4,1]" as_ord="1">close_framegrabber (AcqHandle)</l>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
